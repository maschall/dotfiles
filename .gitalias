alias c="git commit"
alias s="git status"
alias d="git diff"
alias fetch='git fetch --prune'
alias fap='fetch --all --prune'
alias b='git branch'
alias stash='git stash'
alias unstash='git stash pop'
alias reset='git reset --hard'
alias clean='git clean -xdf'
alias log='git log'
alias checkout='git checkout'
alias cb='checkout'
alias lb='last_branch'
alias m='cb master'
alias undo='git checkout --'
alias morediff='git diff -C20'

function upstream_or_master {
  if git ls-remote upstream 2>/dev/null 1>/dev/null; then
    REMOTE='upstream'
  else
    REMOTE='origin'
  fi
}

function f {
  upstream_or_master
  git fetch ${REMOTE}
}

function merge_from_github {
	current_branch=$(git rev-parse --abbrev-ref HEAD);
	upstream_or_master
  git merge ${REMOTE}/${current_branch}
}

function update {
  f;merge_from_github;
}

function last_branch {
	checkout -
}

function mkb() {
  params=(${1//\// })
  numParams=${#params[@]}
  branchName=${1//origin\//}
  
  if [ "$branchName" = "$1" ]; then
  	checkout -b $1
  else
  	checkout -b $branchName $1
  fi
}

function clone {
  repo=$1

  declare -a hosts=("git@github.com:maschall");

  for host in $hosts; 
  do
  	git clone -q "$host/${repo}.git"
	if [[ $? -eq 0 ]]; then
		if [[ $# -eq 1 ]]; then
			cd "$repo"
		fi
		break
	fi
  done
}

function tag {
	if [ "$#" -eq 0 ]; then
		echo "tag {name} {message}?"
	elif [ "$#" -eq 1 ]; then
		tag=$1
		message=$1
	else
		tag=$1
		message=$2
	fi
	git tag -a $tag -m $message
  upstream_or_master
  git push ${REMOTE} $tag
}

function restore-file {
	file=$1
	commit=$(git rev-list -n 1 HEAD -- "$file")
	git checkout $commit^ -- "$file"
}

if is_zsh; then
	is_zsh && compdef _git mkb=git-checkout
else
	#__git_complete mkb _git_checkout
	#__git_complete cb _git_checkout
	#__git_complete checkout _git_checkout
fi
